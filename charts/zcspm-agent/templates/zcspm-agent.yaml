#Copyright (c) ZCSPM. All rights reserved.
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:
#The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "zcspm-agent.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "zcspm-agent.name" . }}
    chart: {{ template "zcspm-agent.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: {{ .Values.cronjob.schedule }}
  {{- with .Values.cronjob.concurrencyPolicy }}
  concurrencyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.cronjob.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.cronjob.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels:
        app: {{ template "zcspm-agent.name" . }}
        chart: {{ template "zcspm-agent.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      template:
        spec:
          hostPID: true
          {{ if or ( contains "AKS-Engine" .Values.clusterHosting ) ( contains "VM-hosted" .Values.clusterHosting ) ( contains "EC2-Instance-hosted" .Values.clusterHosting ) }}
          nodeSelector:
            node-role.kubernetes.io/master: ""
          tolerations:
            - key: node-role.kubernetes.io/master
              operator: Exists
              effect: NoSchedule
          {{ end }}
          restartPolicy: OnFailure
          initContainers:
          - name: metadata-scanner
            image: {{ .Values.images.kubebenchImage.repository}}:{{ .Values.images.kubebenchImage.tag }}
            imagePullPolicy: {{ .Values.images.imagePullPolicy}}
            command: ["/bin/sh", "-c"]
            args: ["kube-bench --benchmark cis-1.5 >> /var/log/kube-bench/kube-bench.log 2>&1"]
            volumeMounts:
            - name: var-lib-etcd
              mountPath: /var/lib/etcd
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
            - name: etc-systemd
              mountPath: /etc/systemd
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              # /usr/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
              # You can omit this mount if you specify --version as part of the command.
            - name: usr-bin
              mountPath: /usr/bin
            - name: kube-bench-log
              mountPath: /var/log/kube-bench
          containers:
          - name: {{ template "zcspm-agent.name" . }}
            image: {{ .Values.images.zcspmAgentImage.repository}}:{{ .Values.images.zcspmAgentImage.tag }}
            imagePullPolicy: {{ .Values.images.imagePullPolicy}}
            env:
              - name: CLUSTER_NAME
                valueFrom:
                  configMapKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-config
                    key: clusterName
              - name: LICENSE_ID
                valueFrom:
                  configMapKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-config
                    key: licenseId
              - name: ACCOUNT_ID
                valueFrom:
                  configMapKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-config
                    key: accountId
              - name: ZCSPM_ENV
                valueFrom:
                  configMapKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-config
                    key: zcspmEnvironment
              - name: ZCSPM_APIAPP_ID
                valueFrom:
                  configMapKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-config
                    key: zcspmApiAppId
              - name: CLUSTER_HOSTING
                valueFrom:
                  configMapKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-config
                    key: clusterHosting
              - name: ZCSPM_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-secret
                    key: zcspmAPIKey
              - name: ZCSPM_APIAPP_SECRET
                valueFrom:
                  secretKeyRef:
                    name: {{ template "zcspm-agent.name" . }}-secret
                    key: zcspmAPIAppSecret
            volumeMounts:
            - name: kube-bench-log
              mountPath: /var/log/kube-bench
          volumes:
          - name: var-lib-etcd
            hostPath:
              path: "/var/lib/etcd"
          - name: var-lib-kubelet
            hostPath:
              path: "/var/lib/kubelet"
          - name: etc-systemd
            hostPath:
              path: "/etc/systemd"
          - name: etc-kubernetes
            hostPath:
              path: "/etc/kubernetes"
          - name: usr-bin
            hostPath:
              path: "/usr/bin"
          - name: kube-bench-log
            emptyDir: {}
